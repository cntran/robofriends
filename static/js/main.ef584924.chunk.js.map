{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","props","email","name","id","alt","src","CardList","robots","map","user","i","Scroll","style","overflowY","border","height","padding","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,EAfG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAEjC,OACC,qBAAKC,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCKCK,EAbF,SAACC,GACb,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,KAAMC,EAAOH,EAAPG,GACrB,OACC,sBAAKR,UAAU,mDAAf,UACC,qBAAKS,IAAI,SAASC,IAAG,+BAA0BF,EAA1B,cACrB,gCACC,6BAAKD,IACL,4BAAID,WCcOK,EApBE,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAA0B,EAAlBd,YAE3B,OACC,8BAEEc,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAECP,GAAII,EAAOG,GAAGP,GACdD,KAAMK,EAAOG,GAAGR,KAChBD,MAAOM,EAAOG,GAAGT,OAHZS,SCDEC,EARA,SAACX,GACf,OACC,qBAAKY,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAUC,QAAS,QAAxF,SACEhB,EAAMiB,YCkBKC,E,kDAnBd,WAAYlB,GAAQ,IAAD,8BAClB,cAAMA,IACDmB,MAAQ,CACZC,UAAU,GAHO,E,qDAOnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG3B,WACC,OAAIG,KAAKJ,MAAMC,SACP,6DAEDG,KAAKvB,MAAMiB,a,GAjBQQ,IAAMC,WCoDnBC,G,wDA5Cd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKL,SAAS,CAAC/B,YAAaoC,EAAMC,OAAOC,SAbzC,EAAKZ,MAAQ,CACZZ,OAAQ,GACRd,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBuC,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEjB,OAAQ6B,S,oBAOzC,WAAU,IAAD,OAEFC,EAAiBd,KAAKJ,MAAMZ,OAAO+B,QAAO,SAACC,GAChD,OAAOA,EAAMrC,KAAKsC,cAAcC,SAAS,EAAKtB,MAAM1B,YAAY+C,kBAGjE,OAAiC,IAA7BjB,KAAKJ,MAAMZ,OAAOmC,OACd,yCAGN,sBAAK/C,UAAU,KAAf,UACC,oBAAIgD,MAAM,KAAV,yBACA,cAAC,EAAD,CAAWlD,YAAa8B,KAAKJ,MAAM1B,YAAaC,aAAc6B,KAAKK,iBACnE,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUrB,OAAQ8B,e,GAnCPZ,IAAMC,YCITkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ef584924.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input \n\t\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue\"\n\t\t\t\ttype=\"search\" \n\t\t\t\tplaceholder=\"search robots\" \n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Card = (props) => {\n\tconst { email, name, id } = props;\n\treturn (\n\t\t<div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n \nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots, searchfield }) => {\n\t\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\trobots.map((user, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\t\t\temail={robots[i].email} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '1000px', padding: '15px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t)\n};\n\nexport default Scroll;","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({ hasError: true });\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\treturn <h1>Oops. Something went wrong!</h1>\n\t\t}\n\t\treturn this.props.children;\t\n\t}\n}\n\nexport default ErrorBoundary;","import React from 'react';\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport '../containers/App.css';\n\n\nclass App extends React.Component  {\n\t\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({ robots: users }));\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({searchfield: event.target.value});\n\t}\n\n\trender() {\t\t\n\n\t\tconst filteredRobots = this.state.robots.filter((robot) => {\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t});\n\n\t\tif (this.state.robots.length === 0) {\n\t\t\treturn <h1>Loading</h1>\n\t\t} else {\t\t\t\n\t\t\treturn (\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 class=\"f1\">RoboFriends</h1>\n\t\t\t\t\t<SearchBox searchfield={this.state.searchfield} searchChange={this.onSearchChange} />\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<CardList robots={filteredRobots}  />\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t}\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}